{"version":3,"sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","services/images-api.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.styled.js","components/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","App.js","index.js"],"names":["LoaderWrapper","Spinner","type","color","height","width","fetchImages","searchQuery","page","fetch","then","response","ok","json","Promise","reject","Error","SearchBar","SearchForm","SearchFormBtn","SearchFormButtonLabel","SearchFormInput","Searchbar","onSubmit","useState","setSearchQuery","e","preventDefault","trim","alert","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","Gallery","GalleryItem","Image","ImageGalleryItem","webformatURL","tags","onClick","src","alt","ImageGalery","images","handleOpenModal","className","map","id","largeImageURL","LoadButton","Button","Overlay","ModalWindow","modalRoot","document","querySelector","Modal","onCloseModal","selectedImg","handleKeyDown","code","useEffect","window","addEventListener","removeEventListener","createPortal","target","Status","App","setImages","setPage","setSelectedImg","status","setStatus","imagesAPI","hits","length","toast","error","duration","position","prev","scrollTo","top","documentElement","scrollHeight","behavior","catch","toggleModal","data","imageName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a0de9239.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import Loader from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nfunction Spinner() {\n  return (\n    <LoaderWrapper>\n      <Loader type='Grid' color='#3f51b5' height={80} width={80} />\n    </LoaderWrapper>\n  );\n}\nexport default Spinner;\n","const API_KEY = \"21094416-818b6ee494a1708108f1a0838\";\nconst API_URL = \"https://pixabay.com/api/\";\n\nfunction fetchImages(searchQuery, page) {\n  return fetch(\n    `${API_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(\"Can`t find image with entered name\"));\n  });\n}\n\nexport default fetchImages;\n","import styled from \"@emotion/styled/macro\";\n\nexport const SearchBar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &:placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  SearchBar,\n  SearchForm,\n  SearchFormBtn,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nfunction Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const onInputChange = (e) =>\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      //сюда можно добавить нормальную нотификашку\n      alert('Enter search image');\n      return;\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <SearchBar>\n      <SearchForm onSubmit={onFormSubmit}>\n        <SearchFormBtn type='submit'>\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormBtn>\n\n        <SearchFormInput\n          type='text'\n          autoComplete='off'\n          autoFocus\n          placeholder='Search images and photos'\n          onChange={onInputChange}\n          value={searchQuery}\n        />\n      </SearchForm>\n    </SearchBar>\n  );\n}\n\nexport default Searchbar;\n\n// const INITIAL_STATE = {\n//   searchQuery: \"\",\n// };\n\n// class Searchbar extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   };\n\n//   state = {\n//     ...INITIAL_STATE,\n//   };\n\n//   onInputChange = (e) => {\n//     this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\n//   };\n\n//   onFormSubmit = (e) => {\n//     e.preventDefault();\n//     const { searchQuery } = this.state;\n\n//     if (searchQuery.trim() === \"\") {\n//       //сюда можно добавить нормальную нотификашку\n//       alert(\"Enter search image\");\n//       return;\n//     }\n//     this.props.onSubmit(searchQuery);\n//     this.formReset()\n\n//   };\n\n//   formReset = () => {\n//     this.setState({ ...INITIAL_STATE });\n//   };\n\n//   render() {\n//     const { searchQuery } = this.state;\n//     return (\n//       <SearchBar>\n//         <SearchForm onSubmit={this.onFormSubmit}>\n//           <SearchFormBtn type=\"submit\">\n//             <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n//           </SearchFormBtn>\n\n//           <SearchFormInput\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             onChange={this.onInputChange}\n//             value={searchQuery}\n//           />\n//         </SearchForm>\n//       </SearchBar>\n//     );\n//   }\n// }\n\n// export default Searchbar;\n","import styled from \"@emotion/styled/macro\";\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 20px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from \"@emotion/styled/macro\";\n\nexport const GalleryItem = styled.li`\n  border-radius: 2px;\n  /* box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12); */\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { GalleryItem, Image } from './ImageGalleryItem.styled';\n\nfunction ImageGalleryItem({ webformatURL, tags, onClick }) {\n  return (\n    <GalleryItem>\n      <Image onClick={onClick} src={webformatURL} alt={tags} />\n    </GalleryItem>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nimport { Gallery } from './ImageGallery.styled';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGalery({ images, handleOpenModal }) {\n  return (\n    <Gallery className='ImageGallery'>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            tags={tags}\n            onClick={() => handleOpenModal(largeImageURL)}\n          ></ImageGalleryItem>\n        );\n      })}\n    </Gallery>\n  );\n}\n\nImageGalery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      tags: PropTypes.string,\n      webformatURL: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    })\n  ),\n  handleOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalery;\n","import styled from \"@emotion/styled/macro\";\n\nexport const LoadButton = styled.button`\n  min-width: 100px;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  margin: 0 auto;\n  margin-top: 20px;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { LoadButton } from './Button.styled';\n\nfunction Button({ onClick }) {\n  return (\n    <LoadButton className='Button' type='button' onClick={onClick}>\n      Load more\n    </LoadButton>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from \"@emotion/styled/macro\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ onCloseModal, selectedImg }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  function handleKeyDown(e) {\n    if (e.code === 'Escape') {\n      onCloseModal();\n    }\n  }\n\n  function handleBackdropClick(e) {\n    if (e.target === e.currentTarget) {\n      onCloseModal();\n    }\n  }\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalWindow>\n        <img src={selectedImg} alt='' />\n      </ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport Spinner from \"../src/components/Loader/Loader\";\nimport imagesAPI from \"../src/services/images-api\";\nimport Searchbar from \"../src/components/Searchbar/Searchbar\";\nimport ImageGalery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"../src/components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [selectedImg, setSelectedImg] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    if (page === 1) {\n      setStatus(Status.PENDING);\n    }\n\n    imagesAPI(searchQuery, page)\n      .then(({ hits }) => {\n        if (hits.length === 0) {\n          toast.error(\"Oops.. no images found\", {\n            duration: 4000,\n            position: \"top-right\",\n          });\n        }\n        setImages((prev) => [...prev, ...hits]);\n        setStatus(Status.RESOLVED);\n\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      })\n      .catch((error) => new Error(error));\n  }, [searchQuery, page]);\n\n  const handleSearchForm = (imageName) => {\n    setPage(1);\n    setImages([]);\n    setSearchQuery(imageName);\n  };\n\n  const onBtnSearch = () => setPage((page) => page + 1);\n\n  const toggleModal = (data) => setSelectedImg(data);\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleSearchForm}></Searchbar>\n      {status === Status.PENDING && <Spinner />}\n      {status === Status.RESOLVED && (\n        <>\n          <ImageGalery handleOpenModal={toggleModal} images={images} />\n          {images.length !== 0 && <Button onClick={onBtnSearch} />}\n          {selectedImg && (\n            <Modal selectedImg={selectedImg} onCloseModal={toggleModal} />\n          )}\n        </>\n      )}\n\n      <Toaster />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}